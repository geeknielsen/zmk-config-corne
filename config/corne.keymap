/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1500  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    chosen { zmk,underglow = &led_strip; };
};

// &led_strip { chain-length = <27>; };

/ {
    behaviors {
        hold_behavior: hold_behavior {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_BEHAVIOR";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        behavior_shift_caps: behavior_shift_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "BEHAVIOR_SHIFT_CAPS";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPSLOCK>;
        };

        behavior_del_backspace: behavior_del_backspace {
            compatible = "zmk,behavior-mod-morph";
            label = "BEHAVIOR_DEL_BACKSPACE";
            bindings = <&kp DEL>, <&kp BACKSPACE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB               &kp Q  &kp W  &kp E               &kp R               &kp T                 &kp Y    &kp U        &kp I                    &kp O          &kp P          &kp BSPC
&behavior_shift_caps  &kp A  &kp S  &hold_behavior 2 D  &hold_behavior 1 F  &hold_behavior 3 G    &kp H    &kp J        &kp K                    &kp L          &kp SEMI       &kp SQT
&kp LCTRL             &kp Z  &kp X  &kp C               &kp V               &kp B                 &kp N    &kp M        &kp SEMICOLON            &kp LS(COMMA)  &kp BACKSPACE  &kp DELETE
                                    &kp LEFT_ALT        &kp LEFT_WIN        &kp SPACE             &kp RET  &key_repeat  &behavior_del_backspace
            >;
        };

        layer_Pile {
            bindings = <
&bl BL_TOG  &none  &none  &trans  &none   &none     &none   &none           &kp UP_ARROW    &none            &none  &bl BL_TOG
&trans      &none  &none  &none   &none   &mo 6     &none   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none  &none
&trans      &none  &none  &none   &none   &none     &none   &none           &none           &none            &none  &none
                          &trans  &trans  &trans    &trans  &trans          &trans
            >;
        };

        layer_Mouse {
            bindings = <
&none   &none  &none  &trans  &none   &none     &none   &none           &mmv MOVE_UP    &none            &none  &none
&trans  &none  &none  &none   &mo 4   &mo 5     &none   &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none  &none
&trans  &none  &none  &none   &none   &none     &none   &none           &none           &none            &none  &none
                      &trans  &trans  &trans    &trans  &trans          &trans
            >;
        };

        layer_Calculator {
            bindings = <
&soft_off  &none  &none  &trans  &none   &none     &kp MINUS  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9
&trans     &none  &none  &none   &none   &none     &kp PLUS   &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_NUMBER_4
&trans     &none  &none  &none   &none   &none     &kp EQUAL  &kp ASTERISK     &kp KP_DIVIDE    &none            &none            &none
                         &trans  &trans  &trans    &trans     &trans           &trans
            >;
        };

        layer_Mouse_Fast {
            bindings = <
&kp KP_NUMBER_4  &kp NUMBER_4  &none  &trans  &none   &none     &none   &none   &none   &none  &none  &none
&trans           &none         &none  &none   &none   &none     &none   &none   &none   &none  &none  &none
&trans           &none         &none  &none   &none   &none     &none   &none   &none   &none  &none  &none
                                      &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_Mouse_Scroll {
            bindings = <
&kp KP_NUMBER_5  &none  &none  &trans  &none   &none     &none   &none           &msc SCRL_UP    &none            &none  &none
&trans           &none  &none  &none   &none   &none     &none   &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_RIGHT  &none  &none
&trans           &none  &none  &none   &none   &none     &none   &none           &none           &none            &none  &none
                               &trans  &trans  &trans    &trans  &trans          &trans
            >;
        };

        layer_Home_End {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans    &kp PAGE_UP    &trans   &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp HOME  &kp PAGE_DOWN  &kp END  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans    &trans         &trans   &trans  &trans
                        &trans  &trans  &trans    &trans  &trans    &trans
            >;
        };

        layer_signs {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
