/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hold_behavior: hold_behavior {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_BEHAVIOR";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE    &kp Q  &kp W  &kp E     &kp R               &kp T        &kp Y    &kp U  &kp I          &kp O          &kp P          &kp BSPC
&kp LCTRL     &kp A  &kp S  &kp D     &hold_behavior 1 F  &kp G        &kp H    &kp J  &kp K          &kp L          &kp SEMI       &kp SQT
&kp LEFT_ALT  &kp Z  &kp X  &kp C     &kp V               &kp B        &kp N    &kp M  &kp SEMICOLON  &kp LS(COMMA)  &kp BACKSPACE  &kp DELETE
                            &kp LGUI  &kp LEFT_SHIFT      &kp SPACE    &kp RET  &mo 0  &kp RALT
            >;
        };

        layer_1 {
            bindings = <
&bl BL_TOG  &none  &none  &trans  &none   &none     &none   &none           &kp UP_ARROW    &none            &none  &bl BL_TOG
&trans      &none  &none  &none   &none   &none     &none   &kp LEFT_ARROW  &none           &kp RIGHT_ARROW  &none  &none
&trans      &none  &none  &none   &none   &none     &none   &none           &kp DOWN_ARROW  &none            &none  &none
                          &trans  &trans  &trans    &trans  &trans          &trans
            >;
        };
    };
};
